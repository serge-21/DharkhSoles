#BlueJ class context
comment0.target=Room
comment0.text=\n\ Class\ Room\ -\ a\ room\ in\ the\ game.\n\n\ This\ class\ is\ part\ of\ the\ "Dharkh\ Soles"\ application.\n\ "Dharkh\ Soles"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\n\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \n\ stores\ a\ reference\ to\ the\ neighboring\ room.\ Each\ room\ may\ or\ may\ not\ have\n\ a\ door.\n\ \n\ @author\ \ Michael\ K\u00F6lling,\ David\ J.\ Barnes,\ and\ Syraj\ Alkhalil\n\ @version\ 28.11.2021\n
comment1.params=roomName\ description
comment1.target=Room(java.lang.String,\ java.lang.String)
comment1.text=\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\n\ no\ exits.\ "roomName"\ is\ something\ like\ "a\ kitchen"\ or\ "pub"\n\ "description"\ is\ something\ like\ "an\ open\ court\ yard".\n\ hasDoor\ has\ to\ be\ Boolean\ to\ distinguish\ broken\ doors\n\ from\ rooms\ with\ no\ doors.\n\ @param\ roomName\ The\ room's\ name.\n\ @param\ description\ The\ room's\ description.\n
comment10.params=
comment10.target=java.lang.Boolean\ getHasDoor()
comment10.text=\n\ return\ the\ field\ hasDoor\n
comment11.params=
comment11.target=java.lang.String\ getLongDescription()
comment11.text=\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\n\ \ \ \ \ Exits\:\ north\ west\n\ @return\ A\ long\ description\ of\ this\ room\n
comment12.params=
comment12.target=int\ numberOfItems()
comment12.text=\n\ @return\ the\ number\ of\ items\ in\ a\ room\n
comment13.params=item
comment13.target=void\ addItem(Items)
comment13.text=\n\ Add\ an\ item\ to\ the\ room.\n\ @param\ item\ the\ item\ we\ want\ to\ add\ to\ the\ room\n
comment14.params=itemToRemove
comment14.target=void\ removeItem(java.lang.String)
comment14.text=\n\ remove\ an\ item\ from\ the\ room.\n\ @param\ itemToRemove\ the\ item\ we\ want\ to\ remove\ from\ the\ room\n
comment15.params=person
comment15.target=void\ addPerson(People)
comment15.text=\n\ add\ a\ person\ to\ the\ room.\n\ @param\ person\ the\ person\ we\ wish\ to\ add\ to\ the\ room\n
comment16.params=person
comment16.target=void\ removePerson(People)
comment16.text=\n\ remove\ a\ person\ from\ the\ room\n\ @param\ person\ the\ person\ we\ wish\ to\ remove\ from\ the\ room\n
comment17.params=isPerson
comment17.target=boolean\ hasPerson(java.lang.String)
comment17.text=\n\ @return\ if\ the\ room\ has\ a\ given\ person\ as\ a\ boolean\n
comment18.params=personToBeFound
comment18.target=People\ getPerson(java.lang.String)
comment18.text=\n\ @return\ the\ person\ that\ is\ in\ the\ room.\n
comment19.params=
comment19.target=java.lang.String\ getExitString()
comment19.text=\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\n\ "Exits\:\ north\ west".\n\ @return\ Details\ of\ the\ room's\ exits.\n
comment2.params=roomName\ description\ hasDoor
comment2.target=Room(java.lang.String,\ java.lang.String,\ boolean)
comment2.text=\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\n\ no\ exits.\ "hasDoor"\ is\ a\ boolean.\ The\ room\ either\ has\ a\ door\ or\ not.\n\ @param\ roomName\ The\ room's\ name.\n\ @param\ description\ The\ room's\ description.\n\ @param\ hasDoor\ Boolean\ either\ true\ or\ false.\n
comment20.params=direction
comment20.target=Room\ getExit(java.lang.String)
comment20.text=\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\n\ @param\ direction\ The\ exit's\ direction.\n\ @return\ The\ room\ in\ the\ given\ direction.\n
comment21.params=direction\ neighbor
comment21.target=void\ setExit(java.lang.String,\ Room)
comment21.text=\n\ Define\ an\ exit\ from\ this\ room.\n\ @param\ direction\ The\ direction\ of\ the\ exit.\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\n
comment22.params=state
comment22.target=void\ changeStateOfDoor(boolean)
comment22.text=\n\ changes\ the\ state\ of\ a\ door\ from\ open\ to\ shut\ and\ vice\ versa\n\ @param\ state\ of\ door,\ open\ \=\ 1\ ,\ close\ \=\ 0.\n
comment23.params=exist
comment23.target=void\ addAnExistForJoe(java.lang.String)
comment23.text=\n\ adds\ all\ the\ possible\ exits\ for\ a\ given\ room\ to\ Joe\ so\ that\ he\ can\ pick\ a\ random\ exit\n\ and\ go\ in\ that\ direction\n\ @param\ exist\ the\ exit\ we\ want\ to\ add\ for\ joe\n
comment24.params=
comment24.target=java.lang.String\ pickRandomExist()
comment24.text=\n\ pick\ a\ random\ exit\ by\ generating\ a\ random\ number.\n\ @return\ the\ exit\ as\ a\ string.\n
comment3.params=
comment3.target=java.lang.String\ peopleInRoom()
comment3.text=\n\ check\ how\ many\ people\ exist\ in\ a\ room\ and\n\ gives\ a\ string\ o\ all\ their\ names.\n\ @return\ the\ list\ of\ the\ people\ in\ a\ given\ room.\n
comment4.params=
comment4.target=int\ numberOfPeopleInRoom()
comment4.text=\n\ @return\ the\ total\ number\ of\ the\ people\ in\ a\ given\ room\ as\ an\ int.\n
comment5.params=
comment5.target=java.lang.String\ itemsInRoom()
comment5.text=\n\ @return\ the\ items\ in\ the\ room\ as\ a\ string.\n
comment6.params=isItem
comment6.target=boolean\ hasItem(java.lang.String)
comment6.text=\n\ @return\ if\ the\ room\ has\ a\ given\ item\ as\ a\ boolean.\n
comment7.params=itemToBeGiven
comment7.target=Items\ getItem(java.lang.String)
comment7.text=\n\ @return\ the\ item\ to\ be\ picked\ up\ by\ the\ player\ as\ an\ item\n
comment8.params=
comment8.target=java.lang.String\ roomName()
comment8.text=\n\ @return\ the\ name\ of\ the\ room\n
comment9.params=
comment9.target=java.lang.Boolean\ hasDoor()
comment9.text=\n\ @return\ if\ this\ room\ has\ a\ door\ as\ a\ boolean.\n
numComments=25
