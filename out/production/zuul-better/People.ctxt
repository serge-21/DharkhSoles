#BlueJ class context
comment0.target=People
comment0.text=\n\ Class\ People\ -\ a\ person\ in\ the\ game.\n\n\ A\ "person"\ represents\ one\ player\ of\ the\ game.\ the\ player\ has\ health\n\ weight\ that\ is\ gained\ due\ to\ picking\ items,\ a\ position,\ and\ an\ inventory\n\ the\ player\ can\ be\ attacked\ and\ if\ the\ health\ of\ the\ player\ reaches\ 0\n\ the\ player\ dies.\n\n\ @author\ Syraj\ Alkhalil\n\ @version\ 28.11.2021\n
comment1.params=name\ position
comment1.target=People(java.lang.String,\ Room)
comment1.text=\n\ Create\ the\ person\ and\ set\ the\ health\ points\ to\ 100,\ and\ the\ \n\ total\ weight\ to\ 0\ (as\ the\ person\ is\ not\ holding\ anything\ in\ the\ inventory).\n
comment10.params=
comment10.target=java.lang.String\ getName()
comment10.text=\n\ @return\ the\ name\ of\ the\ player/character\n
comment11.params=newPosition
comment11.target=void\ changePosition(Room)
comment11.text=\n\ Change\ the\ current\ position\ of\ the\ player.\n\ @param\ \ newPosition\ \ the\ position\ we\ wish\ to\ go\ to.\n
comment12.params=
comment12.target=void\ clearStack()
comment12.text=\n\ clear\ the\ entire\ stack\ of\ visited\ rooms.\n\ this\ is\ useful\ when\ we\ teleport\ to\ other\ places.\n
comment13.params=newNextPosition
comment13.target=void\ changeNextPosition(Room)
comment13.text=\n\ Change\ the\ destination\ the\ player\ wants\ to\ go\ to.\n\ @param\ \ newNextPosition\ \ the\ position\ we\ wish\ to\ go\ to.\n
comment14.params=room
comment14.target=void\ addRoom(Room)
comment14.text=\n\ Push\ the\ newly\ visited\ room\ onto\ the\ stack.\n\ @param\ \ room\ \ the\ position\ we\ just\ visited\n
comment15.params=item
comment15.target=void\ pickItem(Items)
comment15.text=\n\ Add\ an\ item\ to\ the\ inventory\ and\ increase\ the\ weight\ of\ the\ player\n\ @param\ \ item\ \ the\ item\ we\ wish\ to\ add\ to\ the\ inventory\n
comment16.params=
comment16.target=boolean\ getIsFollowing()
comment16.text=\n\ the\ player\ is\ never\ really\ following\ anyone.\n\ however,\ the\ bandits\ might.\n\ I\ am\ not\ sure\ if\ this\ is\ the\ best\ implementation\ but\ this\ is\n\ what\ I\ managed\ to\ come\ up\ with,\ because\ I\ don't\ 100%\ understand\n\ inheritance\n\n\ @return\ always\ false\n
comment17.params=following
comment17.target=void\ following(boolean)
comment17.text=\n\ this\ method\ should\ be\ used\ from\ the\ Enemy\ class.\n\ the\ same\ explanation\ for\ getIsFollowing().\n\ @param\ following\ a\ boolean\ value.\ true\ for\ this\ person\ is\ following\ someone.\n
comment18.params=itemToRemove
comment18.target=void\ dropItem(java.lang.String)
comment18.text=\n\ Remove\ an\ item\ to\ the\ inventory\ and\ decrease\ the\ weight\ of\ the\ player\n\ @param\ \ itemToRemove\ \ the\ item\ we\ wish\ to\ remove\ from\ the\ inventory\n
comment19.params=type
comment19.target=boolean\ itemType(java.lang.String)
comment19.text=\n\ check\ if\ an\ item\ exists\ in\ the\ inventory\ and\ return\ true\ or\ false.\n\ @param\ type\ a\ string\ that\ is\ the\ name\ of\ a\ given\ item.\n\ @return\ boolean.\ either\ true\ if\ we\ have\ the\ item\ or\ false\ if\ we\ don't\n
comment2.params=newName
comment2.target=void\ changeName(java.lang.String)
comment2.text=\n\ set\ the\ name\ of\ the\ player/character\n\ @param\ newName\ the\ new\ name\ of\ the\ character\ or\ player\n
comment20.params=
comment20.target=Room\ getPosition()
comment20.text=\n\ @return\ the\ current\ position\ of\ the\ player\ \n
comment21.params=
comment21.target=Room\ getNextPosition()
comment21.text=\n\ @return\ the\ position\ the\ player\ wants\ to\ go\ to.\ \n
comment22.params=
comment22.target=Room\ getLastVisitedPosition()
comment22.text=\n\ @return\ the\ last\ visited\ position.\n
comment23.params=
comment23.target=Room\ peekVisitedPosition()
comment23.text=\n\ @return\ the\ last\ visited\ position.\n
comment24.params=
comment24.target=java.util.Stack\ getAllVisitedRooms()
comment24.text=\n\ @return\ ALL\ the\ visited\ positions\ in\ the\ game.\n
comment25.params=
comment25.target=int\ getTotalWeight()
comment25.text=\n\ @return\ the\ totalWeight\ of\ the\ player\n\ reminder\ that\ the\ totalWeight\ refers\ to\ the\ weight\ gained\ from\ carrying\ items.\n
comment26.params=
comment26.target=int\ numberOfItems()
comment26.text=\n\ @return\ the\ number\ of\ items\ that\ the\ player\ has.\n
comment27.params=item
comment27.target=boolean\ hasItem(java.lang.String)
comment27.text=\n\ @return\ if\ the\ player\ has\ a\ certain\ item.\n
comment28.params=itemToBeGiven
comment28.target=Items\ getItem(java.lang.String)
comment28.text=\n\ @return\ the\ item\ that\ is\ to\ be\ dropped.\n
comment29.params=
comment29.target=void\ inventory()
comment29.text=\n\ print\ all\ the\ items\ the\ player\ has\n
comment3.params=
comment3.target=boolean\ isDead()
comment3.text=\n\ checks\ if\ a\ player\ or\ a\ character\ is\ dead\n\ if\ they\ are\ then\ we\ check\ the\ inventory,\n\ if\ they\ have\ anything\ in\ the\ inventory\ then\ they\ drop\n\ the\ items\ in\ the\ inventory.\n\n\ @return\ if\ the\ player\ is\ dead\ or\ not\n
comment4.params=
comment4.target=void\ attacked()
comment4.text=\n\ reduces\ the\ health\ of\ the\ player\ by\ 20hp\n
comment5.params=
comment5.target=int\ getHealth()
comment5.text=\n\ @return\ the\ health\ of\ the\ player\ as\ an\ int\n
comment6.params=
comment6.target=java.util.ArrayList\ getInventory()
comment6.text=\n\ @return\ ArrayList\ of\ all\ the\ items.\ aka\ the\ inventory\ of\ the\ player\ or\ character\n
comment7.params=health
comment7.target=void\ setHealth(int)
comment7.text=\n\ set\ the\ health\ of\ the\ player\ or\ character\ to\ a\ specific\ value.\n\ @param\ health\ the\ new\ health\ of\ the\ character\ or\ player.\n
comment8.params=person
comment8.target=void\ attack(People)
comment8.text=\n\ attack\ a\ certain\ character\n\ and\ check\ if\ they\ are\ dead,\ if\ they\ are\ then\ change\n\ the\ name\ of\ the\ character\ to\ "dead\ "\ +\ the\ character\ name\n\ @param\ person\ the\ person\ we\ wish\ to\ attack.\n
comment9.params=
comment9.target=void\ talk()
comment9.text=\n\ the\ main\ talk\ method...\ each\ character\ has\ their\ own\n\ way\ of\ speech\ that\ will\ be\ specified\ in\ their\ own\ class.\n
numComments=30
